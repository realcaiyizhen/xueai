import dataset
import matplotlib.pyplot as plt
import numpy as np

xs,ys = dataset.get_beans(100)


w = 10000


#这里是每个点，只运行一次梯度下降，运行过后就拿下一个点来做对比了
for i in range(100):
    # 这里越靠近100的点，下降的越快，越远离翘点靠近右边
    j = 99-i
    x = xs[j]
    y = ys[j]
    
    
    #a=x^2
    #b=-2*x*y
    #c=y^2
    #斜率k=2aw+b，源自e=(y-wx)^2的斜率，斜率作为w的调整量刚刚好，又分正负
    k = 2*(x**2)*w + (-2*x*y)
    print (k)
    #alpha越大越震荡，如果是3，甚至震成下边这样
    # 19625.683326665232
    # -95938.59895847755
    # 468988.2444811442
    # -2292611.89812351
    # 11207251.732359376
    # -54785762.690701
    # 267815862.91449597
    # -1309196639.89291
    # 6399904110.437638
    # -31285424492.188538
    # 152936320414.57248
    # -747617092674.8578
    # 3654666960369.404
    # -17865550055079.58
    # 87334326829685.25
    alpha = 0.3
    w = w - alpha*k
    plt.clf() #clear window
    plt.scatter(xs,ys)
    y_pre = w*xs
    plt.plot(xs,y_pre)
    plt.pause(0.01)
    
